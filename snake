#!/usr/local/bin/python3

from colorama import init
from colorama import Fore, Back, Style
from helplist import helplistPrint
from files import writeBssidFile
from files import writeIpFile
from files import writeNMaskFile
from files import fileRead
import cowsay
import time
import sys
import os

init()

sec = time.time()
act_time = time.gmtime(sec)

keyWords = ['-help', '-ipconfig', '-showip', '-list',
            '-ch', '-wlanconfig', '-w', '-bs', '-r', '-ip', '-nw', '-d', '-dns', '-nets', '-runpython', '-a', '-server',
            '-pythoncompile', '-alias', '-host', '-adress', '-dump']

def runPython(argc, index):
    fPYpath = argc[1 + index]
    if len(argc) > (2 + index):
        if argc[2 + index] == keyWords[15]:
            if len(argc) > (4 + index):
                if argc[4 + index] == keyWords[19]:
                    if len(argc) > (5 + index):
                        print('Script running at host: ' + Fore.RED + argc[5 + index] + Fore.WHITE)
                        os.system('python3 ' + fPYpath + ' ' + argc[3 + index])
                    else:
                        print('ERROR! No argument for <' + argc[4 + index] + '>')
                elif argc[4 + index] == keyWords[20]:
                    if len(argc) > (5 + index):
                        print('Script running at adress: ' + Fore.BLUE + argc[5 + index] + Fore.WHITE)
                        os.system('python3 ' + fPYpath + ' ' + argc[3 + index])
                    else:
                        print('ERROR! No argument for <' + argc[4 + index] + '>')
                else:
                    print('ERROR! No usage for ' + argc[4 + index])
            elif len(argc) == (4 + index):
                os.system('python3 ' + fPYpath + ' ' + argc[3 + index])
            else:
                print('ERROR! No argument for <-a>')
        elif argc[2 + index] == keyWords[19]:
            if len(argc) > (3 + index):
                print('Script running at host ' + Fore.RED + argc[3 + index] + Fore.WHITE)
                time.sleep(10)
                os.system('python3 ' + fPYpath + ' ' + argc[3 + index])
            else:
                print('ERROR! No argument for <' + argc[2 + index] + '>')
        elif argc[2 + index] == keyWords[20]:
            if len(argc) > (3 + index):
                print('Script running at adress ' + Fore.BLUE + argc[3 + index] + Fore.WHITE)
                time.sleep(10)
                os.system('python3 ' + fPYpath + ' ' + argc[3 + index])
            else:
                print('ERROR! No argument for <' + argc[2 + index] + '>')
        else:
            print('ERROR! No usage for ' + argc[2 + index])
    else:
        os.system('python3 ' + fPYpath)

def pyhtonCompile(argc, index):
    fPYpath = argc[1 + index]
    with open(fPYpath, 'r+') as file:
        lines = file.readlines()
        lines.insert(0, '#!/usr/local/bin/python3\n')
        file.seek(0)
        file.writelines(lines)
        nameIndex = fPYpath.rfind('/')
        fileName = fPYpath[nameIndex + 1:]

        execFileName = ''

        if '.' in fileName:
            pointIndex = fileName.rfind('.')
            execFileName = fileName[:pointIndex]
        else:
            execFileName = fileName

        os.rename(fPYpath, execFileName)
        os.system('chmod 755 ' + execFileName)

makeAlias = lambda argc: os.system('ln -s ' + argc[1] + ' ' + argc[2])

def dumpServer(type, adress):
    if type == '-host':
        print('Starting server at ' + Fore.RED + adress + Fore.WHITE)
        time.sleep(5)
        print('Creating repos at ' + Fore.RED + adress + Fore.WHITE)
        time.sleep(7)
        print('Uploading files...')
        time.sleep(10)
        print(Fore.GREEN + 'DONE!' + Fore.WHITE)
    elif type == '-adress':
        print('Starting server at ' + Fore.BLUE + adress + Fore.WHITE)
        time.sleep(5)
        print('Creating repos at ' + Fore.BLUE + adress + Fore.WHITE)
        time.sleep(7)
        print('Uploading files...')
        time.sleep(10)
        print(Fore.GREEN + 'DONE!' + Fore.WHITE)

def arg_exec(arg):
    if arg[0] == keyWords[1]:
        if len(arg) > 1:
            if arg[1] == keyWords[3]:
                os.system('airport -s')
            else:
                print('ERROR! No usage for ' + arg[1])
        else:
            os.system('ifconfig')
    elif arg[0] == keyWords[2]:
        os.system('ipconfig getifaddr en0')
    elif arg[0] == keyWords[0]:
        helplistPrint()
    elif arg[0] == keyWords[4]:
        os.system('airport --channel')
    elif arg[0] == keyWords[5]:
        if len(arg) > 1:
            if arg[1] == keyWords[3]:
                os.system('netstat -nr')
            else:
                print('ERROR! No usage for ' + arg[1])
        else:
            os.system('airport --getinfo')
    elif arg[0] == keyWords[6]:
        if len(arg) > 1:
            filePath = arg[1]
            if arg[2] == keyWords[7]:
                bssid = arg[3]
                BSSID_fileName = str(act_time.tm_mday) + '-' + str(act_time.tm_mon) + '-' + str(act_time.tm_year) + '_' + str(act_time.tm_hour) + '-' + str(act_time.tm_min) + '-' + str(act_time.tm_sec) + '_marco_bssid.txt'
                filePath += BSSID_fileName
                writeBssidFile(filePath, bssid)
            elif arg[2] == keyWords[9]:
                    ip = arg[3]
                    IP_fileName = str(act_time.tm_mday) + '-' + str(act_time.tm_mon) + '-' + str(
                        act_time.tm_year) + '_' + str(act_time.tm_hour) + '-' + str(act_time.tm_min) + '-' + str(
                        act_time.tm_sec) + '_ip_marco.txt'
                    filePath += IP_fileName
                    writeIpFile(filePath, ip)

            elif arg[2] == keyWords[10]:
                    nwmask = arg[3]
                    nw_fileName = str(act_time.tm_mday) + '-' + str(act_time.tm_mon) + '-' + str(
                        act_time.tm_year) + '_' + str(act_time.tm_hour) + '-' + str(act_time.tm_min) + '-' + str(
                        act_time.tm_sec) + '_ip_marco.txt'
                    filePath += nw_fileName
                    writeNMaskFile(filePath, nwmask)
            else:
                print('ERROR! Input adress/mask_code here!')

            print('Created file: ' + filePath)
        else:
            print('ERROR! Enter file path')
    elif arg[0] == keyWords[8]:
        if len(arg) > 1:
            frpath = arg[1]
            print(fileRead(frpath))
        else:
            print('ERROR! Enter file path')
    elif arg[0] == keyWords[11]:
        if len(arg) > 1:
            fdpath = arg[1]
            os.remove(fdpath)
            print('Deleted!')
        else:
            print('ERROR! Enter file path')
    elif arg[0] == keyWords[3]:
        print('<Usage -list>  config_arg -list')
    elif arg[0] == keyWords[12]:
        os.system('ipconfig getoption en0 domain_name_server')
    elif arg[0] == keyWords[13]:
        if len(arg) > 1:
            if arg[1] == keyWords[3]:
                os.system('netstat -i')
            else:
                print('ERROR! No usage for ' + arg[1])
        else:
            os.system('netstat')
    elif arg[0] == keyWords[14]:
        if len(arg) > 1:
            runPython(arg, 0)
        else:
            print('ERROR! Enter file path')
    elif arg[0] == keyWords[17]:
        if len(arg) > 1:
            pyhtonCompile(arg, 0)
        else:
            print('ERROR! Enter file path')
    elif arg[0] == keyWords[16]:
        if len(arg) > 1:
            if arg[1] == keyWords[14]:
                runPython(arg, 1)
            elif arg[1] == keyWords[17]:
                pyhtonCompile(arg, 1)
            elif arg[1] == keyWords[19]:
                if len(arg) < 3:
                    print('ERROR! Enter host')
                else:
                    print('No server at ' + Fore.RED + arg[2] + Fore.WHITE)
            elif arg[1] == keyWords[20]:
                if len(arg) < 3:
                    print('ERROR! Enter adress')
                else:
                    print('No server at ' + Fore.BLUE + arg[2] + Fore.WHITE)
            elif arg[1] == keyWords[21]:
                if len(arg) > 3:
                    if arg[3] == keyWords[19]:
                        if(len(arg)) == 5:
                            dumpServer(arg[3], arg[4])
                        else:
                            print('ERROR! Enter adress!')
                    elif arg[3] == keyWords[20]:
                        if (len(arg)) == 5:
                            dumpServer(arg[3], arg[4])
                        else:
                            print('ERROR! Enter adress!')
                    else:
                        print('ERROR! No usage for ' + arg[3])
                elif len(arg) == 3:
                    print('ERROR! Enter argument')
                else:
                    print('ERROR! No serverfile')
            else:
                print('ERROR! No usage for -script ' + arg[1])
        else:
            print('Usage: -server command | <script>')
    elif arg[0] == keyWords[18]:
        if len(arg) > 1:
            if len(arg) < 3:
                print('ERROR! Enter path2')
            else:
                makeAlias(arg)
                print(Fore.GREEN, 'CREATED')
        else:
            print('Usage -alias path1 path2')


def main():
    main_arg = sys.argv[1:]

    argCheck = ''

    for i in keyWords:
        argCheck += i

    isExist = argCheck.count(main_arg[0])

    if isExist <= 0:
        print('snake: command ' + main_arg[0] + ' does not exist')
    else:
        arg_exec(main_arg)

try:
    main()
except IndexError:
    print('snake: no command')
